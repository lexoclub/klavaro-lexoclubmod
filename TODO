____________________________________________________________
Simple list of things that could be done in future releases:

- Make possible individual reset of character errors logs in adaptability.
- Show sqrt(accuracy * speed) in progress charts for modules basic, adapt and speed.
- Add instructions for typing with the shift keys (in the introduction).
- Explain what are the blank lessons after 43, in basic module.

- Compile for Windows again...
- Verify GtkDataBox for updating as external lib. (2019-02-02: not yet, still on GTK-2, so updated to use GTK-3, from sf.net GIT)
- Substitute all deprecated gtk_widet_override_background functions. (no way on GtkTextView...)

____________________________________________
And suggestions that probably won't be done:

- Configurable colors for the progress charts. (too much colors to deal with, gradients, complicate to specify each one)
- Add method for advanced users to learn the keyboard from words in the dictionaries: center row left/rigth/both hands, lower row, upper row, number row, etc. (complicated, maybe not so useful, volunteers, please)
- Local network support for local scores; zeroconf allows sharing ranking data among users connected to the same network. (libavahi? complicated, volunteers, please)
- Collect wrong words and/or slow typed ones, and create special exercises with them in the velocity module. (complicated, volunteers, please)
- Add a metronome mode for speed and fluidity modules. (use an external program: GTick)
- Use long dictionaries for the speed module (word frequency should come from real language used in ordinary texts, but if people send a dict long it will be accepted, in a language basis).
- Print report after completion of a fluidity session. (printscreen should be enough, save the Earth!)
- Allow the user to delete his full name from the web, at Top 10 (or Top 200). (No way to make this secure, the user should ask the maintainer to do that)
- Get rid of the main menu window, moving all actions there to the tutor window. (no reason to change the "game" style of the application)
- Add some kind of lessons for the numeric pad. (the user may create custom lessons for this)
- Support for AltGr symbols. (also here, the user may create custom lessons)
- Use sound system instead of the PC beeps. (in Gnome, for example, one can configure the beeps as smooth sounds)
- Disable Alt-keys as shortcuts, because some systems use Alt-keys to type characters. (disabling this should be done by GTK global configuration, search for GtkSettings and gtk-enable-mnemonics)
- Separate error and touch-speed analises by language, and put in other module, apart from the adaptability. (these analyses had been separated according to the keyboard, so the user should apply the rigth keyboard for each different language)
- Fix timeout handling of cursor blinking. (indeed, that's a feature, in fluidness module, if the user speed is good, why to care about the cursor?)
